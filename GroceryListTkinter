from tkinter import *
import json
import os
import time
from twilio.rest import Client

root = Tk()
root.title("list")
root.geometry("650x450")


icon = PhotoImage(file='cart.png')
root.iconphoto(True,icon)
root.config(background="#404040")

# Find your Account SID and Auth Token at twilio.com/console
# and set the environment variables. See http://twil.io/secure
account_sid = ''
auth_token = ''
client = Client(account_sid, auth_token)



item_list = []
stock = []




file_path = "grocery_list.json"

rec_numbers = 'whatsapp:#'


# Add and delete functions

def add_item(event=None):
    item = entry.get()
    item = "  " + item.lower().capitalize()
    if check_var.get():

        if item and item not in listbox2.get(0, END):
            item_list.append(item)
            item_list.sort()
            indx = item_list.index(item)
            listbox2.insert(indx,item)
            entry.delete(0, END)
            with open(file_path, "w") as json_file:
                json.dump(item_list, json_file)
    else:
        if item and item in listbox2.get(0, END):
            stock.append(item)
            stock.sort()
            indx = stock.index(item)
            listbox1.insert(indx, item)
            entry.delete(0, END)


#
def delete_item():
    selected_index = listbox2.curselection()
    if selected_index:
        index = selected_index[0]
        item_list.remove(listbox2.get(index))
        listbox2.delete(index)

        with open(file_path, "w") as json_file:
            json.dump(item_list, json_file)

def shop_list():
    listbox3.delete(0, END)
    missing_items = [item for item in item_list if item not in stock]
    missing_items.sort()
    for item in missing_items:
        listbox3.insert(END, item)

def create_list():
    items = listbox3.get(0, END)
    missing_items = [item.strip() for item in items]  # Remove any leading/trailing spaces
    return missing_items



def send_list():
    try:
        message_content = "\n".join(create_list())
        print(message_content)
        message = client.messages.create(
            from_='whatsapp:#',
            body=message_content,
            to=rec_numbers
        )
        time.sleep(1)
        message = client.messages(message.sid).fetch()
        if message.status == "delivered":
            print("Message successfully delivered")
        else:
            print("Message delivery status:", message.status)
        print(message.sid)
    except Exception as e:
        print("Message sending failed:", str(e))

entry = Entry(root)
entry.place(relx=0.05, rely=0.10)



# Labels of listboxes and Entry

label0 = Label(root, text="Entry:")
label0.place(relx=0.05, rely=0.045)

label1 = Label(root, text="Stock:")
label1.place(relx=0.05, rely=0.20)

label2 = Label(root, text="Groceries:")
label2.place(relx=0.40, rely=0.20)

label3 = Label(root, text="Shop List:")
label3.place(relx=0.75, rely=0.20)


# Create a frame for listbox1 and its scrollbar

frame1 = Frame(root)
frame1.place(relx=0.05, rely=0.25)

listbox1 = Listbox(frame1, width=20, height=15)
listbox1.pack(side=LEFT)

scrollbar1 = Scrollbar(frame1, command=listbox1.yview)
scrollbar1.pack(side=RIGHT, fill=Y)
listbox1.config(yscrollcommand=scrollbar1.set)

# Create a frame for listbox2 and its scrollbar
frame2 = Frame(root)
frame2.place(relx=0.40, rely=0.25)

listbox2 = Listbox(frame2, width=20, height=15)
listbox2.pack(side=LEFT)

scrollbar2 = Scrollbar(frame2, command=listbox2.yview)
scrollbar2.pack(side=RIGHT, fill=Y)
listbox2.config(yscrollcommand=scrollbar2.set)

# Create a frame for listbox3 and its scrollbar
frame3 = Frame(root)
frame3.place(relx=0.75, rely=0.25)

listbox3 = Listbox(frame3, width=20, height=15)
listbox3.pack(side=LEFT)

scrollbar3 = Scrollbar(frame3, command=listbox3.yview)
scrollbar3.pack(side=RIGHT, fill=Y)
listbox3.config(yscrollcommand=scrollbar3.set)


# Buttons


add_button = Button(root, text="Add", command=add_item)
add_button.place(relx=0.25, rely=0.1)
entry.bind("<Return>", add_item)

delete_button = Button(root, text="Delete", command=delete_item)
delete_button.place(relx=0.40, rely=0.82)

shop_button = Button(root, text="Create List!", command=shop_list)
shop_button.pack()

send_button = Button(root, text="Send List!", command=send_list)
send_button.pack()


# Create a checkbox
check_var = IntVar()
checkbox = Checkbutton(root, text="Add to Groceries", variable=check_var)
checkbox.pack()






# Grocery List load_file
try:
    # Try to open the JSON file
    with open(file_path, "r") as json_file:
        item_list = json.load(json_file)


except FileNotFoundError:
    pass




# redering groceries on listbox
item_list.sort()
for item in item_list:
    listbox2.insert(END, item)


root.mainloop()
